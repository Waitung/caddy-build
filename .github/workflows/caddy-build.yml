name: Caddy Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: '版本号'
        required: true
        default: 'new'
      plugins:
        description: '插件'
        required: true
        default: 'caddy-dns/cloudflare mholt/caddy-webdav caddyserver/replace-response git001/caddyv2-upload'
      goos:
        description: '系统'
        required: true
        default: 'linux'
        type: choice
        options:
        - linux
        - windows
      upload:
        description: '上传到服务器'
        required: true
        default: 'false'
        type: choice
        options:
        - true
        - false

jobs:
  caddy-build:
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v3

    - name: check go version
      run: |
        go_version=$(curl -Ls https://github.com/actions/go-versions/raw/main/versions-manifest.json | grep -m 1 "version" | cut -d\" -f4)
        echo "go_version=$go_version" >> $GITHUB_ENV

    - name: install go
      uses: actions/setup-go@v4
      with:
        go-version: '${{ env.go_version }}'
        cache: false

    - name: download xcaddy
      run: |
        mkdir -p ~/build-caddy
        cd ~/build-caddy
        xcaddy_tag=$(curl -Ls https://api.github.com/repos/caddyserver/xcaddy/releases/latest | grep 'tag_name' | cut -d\" -f4 | cut -c 2-)
        wget -q https://github.com/caddyserver/xcaddy/releases/download/v${xcaddy_tag}/xcaddy_${xcaddy_tag}_linux_amd64.tar.gz
        tar -xzvf xcaddy_${xcaddy_tag}_linux_amd64.tar.gz

    - name: build caddy
      run: |
        cd ~/build-caddy
        version=${{ github.event.inputs.version }}
        if [[ $version == new ]];then
          version=$(curl -Ls https://api.github.com/repos/caddyserver/caddy/releases | grep -m 1 "tag_name" | cut -d\" -f4)
        fi
        plugins=(${{ github.event.inputs.plugins }})
        goos=${{ github.event.inputs.goos }}
        if [[ $goos == linux ]]; then caddy_file="caddy"; fi
        if [[ $goos == windows ]]; then caddy_file="caddy.exe"; fi
        mkdir bin
        cd bin
        GOOS=$goos ../xcaddy build $version --output $caddy_file ${plugins[@]/#/--with github.com/}

    - name: upload caddy
      uses: actions/upload-artifact@v3
      with:
        name: caddy-${{ github.event.inputs.goos }}-amd64
        path: ~/build-caddy/bin/*

    - name: upload private
      if: ${{ github.event.inputs.upload == 'true' }}
      env:
        UPLOAD_TOKEN: ${{ secrets.UPLOAD_TOKEN }}
        UPLOAD_URL: ${{ secrets.UPLOAD_URL }}
        TG_TOKEN: ${{ secrets.TG_TOKEN }}
        TG_ID: ${{ secrets.TG_ID }}
        DL_URL: ${{ secrets.DL_URL }}
      run: |
        name=$(ls ~/build-caddy/bin)
        upload_file=$(curl -s -u ${UPLOAD_TOKEN} -F file=@$HOME/build-caddy/bin/${name} ${UPLOAD_URL})
        if $upload_file; then
          text_1=""$'\U2705'" \`${name}\` 已经上传成功"
          text_2=""$'\U1F440'" [查看 Github Action]($GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID)"
          text_3=""$'\U1F517'" ${DL_URL}"
          text_nl="%0A———————————%0A"
          text="${text_1}${text_nl}${text_2}${text_nl}${text_3}"
          curl -s -X POST "https://api.telegram.org/bot${TG_TOKEN}/sendMessage" -d "chat_id=${TG_ID}&text=${text}&parse_mode=Markdown&disable_web_page_preview=true" > /dev/null
        fi
